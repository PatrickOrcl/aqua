https://stackoverflow.com/questions/55921442/how-to-fix-referenceerror-primordials-is-not-defined-in-node

We encountered the same issue when updating a legacy project depending on gulp@3.9.1 to Node.js 12.

These fixes enable you to use Node.js 12 with gulp@3.9.1 by overriding graceful-fs to version 4.2.3.

If your project isn't actively being worked on and you use npm
Create a npm-shrinkwrap.json file containing this:

{
  "dependencies": {
    "graceful-fs": {
      "version": "4.2.3"
    }
  }
}
Commit this npm-shrinkwrap.json file. And then execute npm install which will update the npm-shrinkwrap.json file.

Unfortunately, this solution does not work anymore if you npm install again. See the other solutions below.

If your project is in active development and you use yarn v1
Yarn v1 supports resolving a package to a defined version. You need to add a resolutions section to your package.json:

{
  // Your current package.json contents
  "resolutions": {
    "graceful-fs": "4.2.3"
  }
}
Thanks @jazd for this way to solve the issue.

If your project is in active development and you use npm
Using npm-force-resolutions as a preinstall script, you can obtain a similar result as with yarn v1. You need to modify your package.json this way:

{
  // Your current package.json
  "scripts": {
    // Your current package.json scripts
    "preinstall": "npx npm-force-resolutions"
  },
  "resolutions": {
    "graceful-fs": "4.2.3"
  }
}
npm-force-resolutions will alter the package-lock.json file to set graceful-fsto the wanted version before the install is done.

If you are using a custom .npmrc file in your project and it contains either a proxy or custom registry, you need to change npx npm-force-resolutions to npx --userconfig .npmrc npm-force-resolutions because as of now, npx doesn't use the current folder .npmrc file by default.

Origin of the problem
This issue stems from the fact that gulp@3.9.1 depends on graceful-fs@^3.0.0 which monkeypatches Node.js fs module.

This used to work with Node.js until version 11.15 (which is a version from a development branch and shouldn't be used in production).

graceful-fs@^4.0.0 does not monkeypatch Node.js fs module anymore, which makes it compatible with Node.js > 11.15.

Note that this is not a perennial solution but it helps when you don't have time to update to gulp@^4.0.0.
